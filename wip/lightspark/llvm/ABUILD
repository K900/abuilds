# ABUILD generated by mkpkg_generator.sh

pkgname=llvm
pkgver=2.8
pkgbuild=2
arch=("auto")
_gcc_ver=4.5.2
shortdesc="Low Level Virtual Machine"

tags=("develop sys-devel")

source=("http://llvm.org/releases/$pkgver/$pkgname-$pkgver.tgz"
        "http://llvm.org/releases/$pkgver/clang-$pkgver.tgz")



BUILD_SYSTEM="autotools"
BUILD_KEYS="--prefix=/usr --libdir=/usr/lib$LIBDIRSUFFIX --mandir=/usr/man --sysconfdir=/etc"
INSTALL_KEYS="DESTDIR=$pkgdir"

pkglist="clang llvm_ocaml clang_analyzer"
adddep="perl"
build() {
	cd "$srcdir/$pkgname-$pkgver"

	# At the present, clang must reside inside the LLVM source code tree to build
	# See http://llvm.org/bugs/show_bug.cgi?id=4840
	rm -rf tools/clang
	cp -r "$srcdir/clang-$pkgver" tools/clang

	# Fix symbolic links from OCaml bindings to LLVM libraries
	sed -i 's:\$(PROJ_libdir):/usr/lib'${LIBDIRSUFFIX}'/llvm:' bindings/ocaml/Makefile.ocaml

	# Fix installation directories, ./configure doesn't seem to set them right
	sed -i -e 's:\$(PROJ_prefix)/etc/llvm:/etc/llvm:' \
		-e 's:\$(PROJ_prefix)/lib:$(PROJ_prefix)/lib'${LIBDIRSUFFIX}'/llvm:' \
		-e 's:\$(PROJ_prefix)/docs/llvm:$(PROJ_prefix)/share/doc/llvm:' \
	Makefile.config.in

	# Fix insecure rpath (http://bugs.archlinux.org/task/14017)
	sed -i 's:$(RPATH) -Wl,$(\(ToolDir\|LibDir\|ExmplDir\))::g' Makefile.rules

	# Get the correct list of symbols to export
	# See http://lists.cs.uiuc.edu/pipermail/cfe-dev/2010-April/008559.html
	patch -Np1 -i "$filedir/clang-plugin-loader-registry.patch"

	# Fix clang path in CIndexer.cpp (https://bugs.archlinux.org/task/22799)
	#patch -d tools/clang -Np0 -i "$filedir/cindexer-clang-path.patch"

	# Add GCC 4.6.1 to GccVersions (FS#23631)
	#patch -d tools/clang -Np1 -i "$filedir/clang-toolchains-gcc-versions.patch"

	# Make -flto work
	# Use gold instead of default linker, and always use the plugin
	# Uncomment this if ld.gold is in system
	# patch -d tools/clang -Np0 -i "$srcdir/enable-lto.patch"

	# Fix upstream bug #9869:
	#   Operator.h incompatibility with GCC 4.6 in C++0x mode
	#   Uncomment it when build with gcc 4.6
	# patch -Np2 -i "$srcdir/bug-9869-operator-h-c++0x.patch"

	# Include location of libffi headers in CPPFLAGS
	export CPPFLAGS="$SLKCXXFLAGS $SLKCPPFLAGS $(pkg-config --cflags libffi)"

	_cxx_headers="/usr/include/c++/$_gcc_ver"
	if [[ ! -d $_cxx_headers ]]; then
		echo "Couldn't find the C++ headers, PKGBUILD needs fixing!"
		return 1
	fi

	if [ "$ARCH" = "x86_64" ] ; then
		CHOST=x86_64
	else
		CHOST=i686
	fi

	# Fix clang headers path
	sed -e "/PROJ_headers/s#lib/clang#lib${LIBDIRSUFFIX}/clang#" \
		-i $srcdir/llvm-$pkgver/tools/clang/lib/Headers/Makefile

	./configure \
		--prefix=/usr \
		--libdir=/usr/lib${LIBDIRSUFFIX}/llvm \
		--sysconfdir=/etc \
		--enable-shared \
		--enable-libffi \
		--enable-targets=all \
		--disable-expensive-checks \
		--disable-debug-runtime \
		--disable-assertions \
		--with-cxx-include-root=$_cxx_headers \
		--with-cxx-include-arch=$CHOST \
		--enable-optimized

	make REQUIRES_RTTI=1 -j${numjobs}

       	# We move the clang directory out of the tree so it won't get installed and
	# then we bring it back in for the clang package
	mv tools/clang "$srcdir"
	# -j1 is due to race conditions during the installation of the OCaml bindings
	make -j1 DESTDIR="$pkgdir" install
	mv "$srcdir/clang" tools

	# OCaml bindings go to a separate package
	rm -rf "$srcdir"/{ocaml,ocamldoc}
	mv "$pkgdir"/usr/{lib${LIBDIRSUFFIX}/ocaml,share/doc/llvm/ocamldoc} "$srcdir"

	# Remove duplicate files installed by the OCaml bindings
	rm "$pkgdir"/usr/{lib${LIBDIRSUFFIX}/llvm/libllvm*,share/doc/llvm/ocamldoc.tar.gz}

	# Fix permissions of static libs
	chmod -x "$pkgdir"/usr/lib${LIBDIRSUFFIX}/llvm/*.a

	# Fix libdir in llvm-config (http://bugs.archlinux.org/task/14487)
	sed -i 's:\(ABS_RUN_DIR/lib\):\1/llvm:' "$pkgdir/usr/bin/llvm-config"

	# Get rid of example Hello transformation
	rm "$pkgdir"/usr/lib${LIBDIRSUFFIX}/llvm/*LLVMHello.*

	# Symlink the gold plugin where clang expects it
	ln -s llvm/LLVMgold.so "$pkgdir/usr/lib${LIBDIRSUFFIX}/LLVMgold.so"

	# Add ld.so.conf.d entry
	install -d "$pkgdir/etc/ld.so.conf.d"
	echo /usr/lib${LIBDIRSUFFIX}/llvm >"$pkgdir/etc/ld.so.conf.d/llvm.conf"
}

llvm_ocaml() {
	pkgname=llvm-ocaml
	shortdesc="OCaml bindings for LLVM"
	adddep="ocaml llvm=${pkgver}"
}

llvm_ocaml_prep() {
	cd "$srcdir/llvm-$pkgver"

	install -d "$pkgdir"/{usr/lib${LIBDIRSUFFIX},usr/share/doc/llvm}
	cp -r "$srcdir/ocaml" "$pkgdir/usr/lib${LIBDIRSUFFIX}"
	cp -r "$srcdir/ocamldoc" "$pkgdir/usr/share/doc/llvm"

	# Remove execute bit from static libraries
	chmod -x "$pkgdir"/usr/lib${LIBDIRSUFFIX}/ocaml/libllvm*.a
}

clang() {
	pkgname=clang
	shortdesc="C language family frontend for LLVM"
	adddep="llvm=${pkgver} gcc=${_gcc_ver}"
}

clang_prep() {
	# It looks like clang still needs GCC to assemble and link object files
	# See http://old.nabble.com/%22clang--v%22-shows-a-GCC-call-td28378453.html

	# Fix installation path for clang docs
	sed -i 's:$(PROJ_prefix)/share/doc/llvm:$(PROJ_prefix)/share/doc/clang:' \
		"$srcdir/llvm-$pkgver/Makefile.config"


	cd "$srcdir/llvm-$pkgver/tools/clang"
	make DESTDIR="$pkgdir" install

	# Fix permissions of static libs
	chmod -x "$pkgdir"/usr/lib${LIBDIRSUFFIX}/llvm/*.a

	# Revert the path change in case we want to do a repackage later
	sed -i 's:$(PROJ_prefix)/share/doc/clang:$(PROJ_prefix)/share/doc/llvm:' \
	"$srcdir/llvm-$pkgver/Makefile.config"
}

clang_analyzer() {
	pkgname=clang-analyzer
	shortdesc="A source code analysis framework"
	adddep="clang=${pkgver}"
}

clang_analyzer_prep() {
	cd "$srcdir/llvm-$pkgver/tools/clang"

	install -d "$pkgdir"/usr/{bin,lib${LIBDIRSUFFIX}/clang-analyzer}
	for _tool in scan-{build,view}; do
		cp -r tools/$_tool "$pkgdir/usr/lib${LIBDIRSUFFIX}/clang-analyzer/"
		ln -s /usr/lib${LIBDIRSUFFIX}/clang-analyzer/$_tool/$_tool "$pkgdir/usr/bin/"
	done

	# Compile Python scripts
	python -m compileall "$pkgdir/usr/lib${LIBDIRSUFFIX}/clang-analyzer"
	python -O -m compileall "$pkgdir/usr/lib${LIBDIRSUFFIX}/clang-analyzer"
}

